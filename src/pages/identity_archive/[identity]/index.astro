---
import { getCollection } from 'astro:content';
import { IDENTITIES } from '@/types/types';
import Layout from '@/layouts/Layout.astro';
import idData from '@assets/limbusData/EN_Personalities.json';

export function getStaticPaths() {
	return IDENTITIES.map((id) => {
		return { params: { identity: id } };
	});
}

const { identity } = Astro.params;

const name = identity
	.split('_')
	.map((word: string) => word.charAt(0).toUpperCase() + word.slice(1))
	.join(' ');

const identities = (await getCollection(identity)) as Array<{ id: string }>;
const idDetail = idData.dataList.filter((entry) => entry.name === name);
---

<Layout title={`${name}`}>
	<main class="flex min-h-dvh items-center justify-center">
		<div class="grid grid-cols-2">
			<div></div>
			<div>
				<ul class="flex flex-col gap-2">
					<li class="flex items-center justify-center gap-x-3 rounded-lg bg-zinc-100 p-1">
						<p class="mikodacs text-lg leading-none tracking-tight text-zinc-500 select-none">
							{idDetail[0].title}
						</p>
					</li>

					{
						identities.map((entry, index) => {
							return (
								<li
									class="id-link mikodacs flex items-center justify-center overflow-hidden px-8 py-2 text-center text-lg
										leading-none text-balance"
								>
									<a
										href={`/identity_archive/${identity}/${entry.id.slice(-2)}`}
										class="relative top-0.5 max-w-[22ch]"
									>
										{idDetail[index + 1].title}
									</a>
								</li>
							);
						})
					}
				</ul>
			</div>
		</div>
	</main>
</Layout>

<style>
	.id-link {
		background: rgba(20, 16, 11, 255);
		color: rgba(244, 202, 161, 255);
		clip-path: polygon(
			2.5% 0%,
			97.5% 0%,
			100% 15%,
			100% 85%,
			97.5% 100%,
			2.5% 100%,
			0% 85%,
			0% 15%
		);
	}
</style>
